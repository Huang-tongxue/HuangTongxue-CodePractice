#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//描述11111111111111111111111111111111111111111111111111111111
//输入n个成绩，换行输出n个成绩中最高分数和最低分数的差。
//输入描述：
//两行，第一行为n，表示n个成绩，不会大于10000。
//
//第二行为n个成绩（整数表示，范围0~100），以空格隔开。
//输出描述：
//一行，输出n个成绩中最高分数和最低分数的差。
//void biger(int* b, int* s)//比较两数大小的函数
//{
//	int t = 0;
//	if (*b < *s)
//	{
//		t = *s;
//		*s = *b;
//		*b = t;
//	}
//}
//int main()
//{
//	int n = 0,i=0;
//	int score1 = 0, score2 = 0, score3 = 0;
//	scanf("%d", &n);
//	if (n <=1 )
//	printf("0");
//	scanf("%d", &score1);
//	scanf("%d", &score3);
//	biger(&score3, &score1);
//	while (i<n&&n>2)
//	{
//		scanf("%d", &score2);
//		biger(&score3, &score2);
//		biger(&score2, &score1);
//		i++;
//	}
//	if(n!=1)
//	printf("%d", (score3 - score1));
//	return 0;
//}
//2222222222222222222222222222222222222222222222222222
//描述
//BoBo教KiKi字符常量或字符变量表示的字符在内存中以ASCII码形式存储。BoBo出了一个问题给KiKi，转换以下ASCII码为对应字符并输出他们。
//
//73, 32, 99, 97, 110, 32, 100, 111, 32, 105, 116, 33
//
//输入描述：
//无
//输出描述：
//一行输出转换题目中给出的所有ASCII码对应的字符，无需以空格隔开。
//#include <stdio.h>
//#include<string.h>
//int main()
//{
//
//    int arr[12] = { 73, 32, 99, 97, 110, 32, 100, 111, 32, 105, 116 , 33 };
//    int n = 0;
//    while (n < 12)
//    {
//        printf("%c", arr[n]);
//        n++;
//    }
//    return 0;
//}
//3333333333333333333333333333333333
//warning 校招时部分企业笔试将禁止编程题跳出页面，为提前适应，练习时请使用在线自测，而非本地IDE。
//描述
//输入10个整数，分别统计输出正数、负数的个数。
//输入描述：
//输入10个整数（范围 - 231~231 - 1），用空格分隔。
//输出描述：
//两行，第一行正数个数，第二行负数个数，具体格式见样例。
//示例1
//输入：
//- 1 2 3 - 6 7 8 - 1 6 8 10
//复制
//输出：
//positive : 7
//negative : 3
//#include <stdio.h>
//int main()
//{
//    int a = 0, z = 0, f = 0;
//    while (scanf("%d", &a) != EOF)
//    {
//        if (a > 0)
//            z++;
//        else if (a < 0)
//            f++;
//        else if (a = 0)
//            continue;
//
//    }
//    printf("positive:%d\n", z);
//int main()
//{
//    int score = 0;
//    scanf("%d", &score);
//    if (score > 100)
//        printf("F");
//    else if (score > 89)
//    printf("negative:%d", f);
//    return 0;
//}
// //444444444444444444444444444444444
//小乐乐输入百分制成绩，他想将成绩转换成等级制。转换规则为：90 - 100为’A’，80 - 89为’B’，70 - 79为’C’，60 - 69为’D’，59以下为’E’。如果输入的成绩不在0 - 100之间，输出’F’。
//输入描述：
//一行，一个整数表示的成绩。
//输出描述：
//一行，转换后的等级。
//示例1
//输入：
//78
//复制
//输出：
//C
//#include <stdio.h>
//    {
//        printf("A");
//    }
//    else if (score > 79)
//    {
//        printf("B");
//    }
//    else if (score > 69)
//    {
//        printf("C");
//    }
//    else if (score > 59)
//    {
//        printf("D");
//    }
//    else if (score >= 0)
//    {
//        printf("E");
//    }
//    else if (score < 0)
//    {
//        printf("F");
//    }
//    return 0;
//}
//555555555555555555555555555555555555555555555
//描述
//小乐乐获得4个最大数，请帮他编程找到最大的数。
//输入描述：
//一行，4个整数，用空格分开。
//输出描述：
//一行，一个整数，为输入的4个整数中最大的整数。
//示例1
//输入：
//5 8 2 5
//复制
//输出：
//8
//#include<stdio.h>
//int main()
//{
//    int a, b, c, d;
//    scanf("%d %d %d %d", &a, &b, &c, &d);
//    if (a >= b)
//        b = a;
//    if (c >= d)
//        d = c;
//    if (b >= d)
//        printf("%d", b);
//    if (d > b)
//        printf("%d", d);
//    return 0;
//}
//666666666666666666666666666666666666666666
//描述
//小乐乐学校教学楼的电梯前排了很多人，他的前面有n个人在等电梯。电梯每次可以乘坐12人，每次上下需要的时间为4分钟（上需要2分钟，下需要2分钟）。请帮助小乐乐计算还需要多少分钟才能乘电梯到达楼上。（假设最初电梯在1层）
//
//输入描述：
//输入包含一个整数n(0 ≤ n ≤ 109)
//
//输出描述：
//输出一个整数，即小乐乐到达楼上需要的时间。
//示例1
//输入：
//1
//复制
//输出：
//2
//复制
//示例2
//输入：
//12
//复制
//输出：
//#include <math.h>
//#include <stdio.h>
//int main()
//{
//    int n = 0, t = 0;
//    scanf("%d", &n);
//    if (n <= 11)
//        printf("2");
//    else if (n >= 12)
//    {
//        t = (n / 12) * 4 + 2;
//        printf("%d", t);
//    }
//    return 0;
//}