#define _CRT_SECURE_NO_WARNINGS 1
//描述
//BoBo写了一个十六进制整数ABCDEF，他问KiKi对应的十进制整数是多少。
//
//输入描述：
//无
//输出描述：
//十六进制整数ABCDEF对应的十进制整数，所占域宽为15。
//备注：
//printf可以使用使用格式控制串“% md”输出域宽为m的十进制整数。
//#include <stdio.h>
//
//int main() {
//    long a = 0;
//    a = 0xABCDEF;
//    printf("%15d", a);
//}
//描述
//我们处理的整数通常用十进制表示，在计算机内存中是以二进制补码形式存储，但通常二进制表示的整数比较长，为了便于在程序设计过程中理解和处理数据，通常采用八进制和十六进制，缩短了二进制补码表示的整数，但保持了二进制数的表达特点。请输出十进制整数1234对应的八进制和十六进制。
//
//输入描述：
//无
//输出描述：
//十进制整数1234对应的八进制和十六进制（字母大写），用空格分开，并且要求，在八进制前显示前导0，在十六进制数前显示前导0X。
//备注：
//printf可*/以使用使用格式控制串“% o”、“% X”分别输出八
//进制整数和十六进制整数，并使用修饰符“#”控制前导显示
//#include <stdio.h>
//
//int main() {
//    printf("%#o %#X", 1234, 1234);
//    return 0;
//}
//描述
//牛牛从键盘读入一个字符，一个整数，一个单精度浮点数，按顺序输出它们，并用空格分隔，浮点数保留 6 位小数。
//输入描述：
//读入一个字符，一个整数，一个单精度浮点数用换行符隔开，
//输出描述：
//按顺序输出字符、整数、单精度浮点数，用空格分隔，浮点数保留 6 位小数
//示例1
//输入：
//a
//1
//1.23
//复制
//输出：
//a 1 1.230000
//#include <stdio.h>
//
//int main() {
//    char a = 0;
//    int b = 0;
//    float c = 0;
//    scanf("%c", &a);
//    scanf("%d", &b);
//    scanf("%f", &c);
//    printf("%c %d %.6f", a, b, c);
//    return 0;
//}
